<?php
namespace %src_namespace%;

use EricksonReyes\DomainDrivenDesign\Domain\ValueObject\Identifier;
use EricksonReyes\DomainDrivenDesign\EventSourcedEntity;
use InvalidArgumentException;

/**
 * Class %src_class%
 * @package %src_namespace%
 *
 * @SuppressWarnings(PHPMD.TooManyPublicMethods)
 * @SuppressWarnings(PHPMD.TooManyFields)
 * @SuppressWarnings(PHPMD.TooManyPublicMethods)
 * @SuppressWarnings(PHPMD.TooManyMethods)
 * @SuppressWarnings(PHPMD.ExcessiveClassComplexity)
 */
class %src_class% extends EventSourcedEntity
{
    /**
     * @var Identifier
     */
    private $id;

    %src_fields%

    /**
     * %src_class% constructor.
     *
     * @param Identifier $id
     * @return %src_class%
     * @throws \InvalidArgumentException
     */
    public function __construct(Identifier $id)
    {
        if (trim($id->value()) === '') {
            throw new InvalidArgumentException('Entity id must not be empty.');
        }
        $this->id = $id;
    }

    /**
    * @return Identifier
    */
    public function id(): Identifier
    {
        return $this->id;
    }

    /**
    * @return bool
    */
    public function isDeleted(): bool
    {
        return false;
    }
    %src_nullable_getters%
}
