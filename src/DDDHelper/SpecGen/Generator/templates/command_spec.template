<?php
namespace %spec_namespace%;

use %src_full_qualified_class_name%;
use Faker\Factory;
use Faker\Generator;
use PhpSpec\ObjectBehavior;
use InvalidArgumentException;
%additional_dependencies%

class %spec_class% extends ObjectBehavior
{
    /**
     * @var Generator
     */
    protected $seeder;

    /**
    * @var string
    */
    protected $expectedInvoker;

    %spec_fields%

    public function __construct()
    {
        $this->seeder = Factory::create();
    }

    public function let(%spec_before_test_dependencies%)
    {
        $invoker = $this->seeder->uuid;
        $this->beConstructedWith(
            $this->expectedInvoker = $invoker%spec_comma_prefixed_constructor_fields%
        );
    }

    public function it_is_initializable()
    {
        $this->shouldHaveType(%src_class%::class);
    }

    public function it_requires_a_command_invoker()
    {
        $invoker = str_repeat(' ', mt_rand(1, 10));
        $this->shouldThrow(InvalidArgumentException::class)->during('__construct', [
            $invoker, %spec_constructor_fields%
        ]);
    }

    public function it_has_a_command_invoker()
    {
        $this->invoker()->shouldReturn($this->expectedInvoker);
    }

    %spec_getter_tests%
}