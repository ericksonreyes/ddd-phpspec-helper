<?php
namespace %src_namespace%;

use InvalidArgumentException;
%additional_dependencies%

/**
 * Class %src_class%
 * @package %src_namespace%
 *
 * @SuppressWarnings(PHPMD.TooManyPublicMethods)
 * @SuppressWarnings(PHPMD.TooManyFields)
 * @SuppressWarnings(PHPMD.TooManyPublicMethods)
 * @SuppressWarnings(PHPMD.TooManyMethods)
 * @SuppressWarnings(PHPMD.ExcessiveClassComplexity)
 */
class %src_class%
{
    /**
     * @var string
     */
    private $invoker;

    %src_fields%

    /**
     * %src_class% constructor.
     *
     * @param string $invoker %src_constructor_docs%
     * @throws \InvalidArgumentException
     */
    public function __construct(
        string $invoker%src_comma_prefixed_constructor_fields%
    ) {
        $invoker = trim($invoker);
        if ($invoker === '') {
            throw new InvalidArgumentException('%src_class% invoker is required.');
        }
        $this->invoker = $invoker; %src_dto_constructor_initialization%
    }

    /**
    * @return string
    */
    public function invoker(): string
    {
        return $this->invoker;
    }

    %src_getters%
}
